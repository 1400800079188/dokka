import javax.tools.ToolProvider

buildscript {
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'kotlin'

sourceCompatibility = 1.6

dependencies {
    compile group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib', version: kotlin_version
    compile group: 'org.jetbrains.kotlin', name: 'kotlin-reflect', version: kotlin_version

    compile group: 'com.google.inject', name: 'guice', version: '3.0'
    compile "org.jsoup:jsoup:1.8.3"

    compile files("../lib/intellij-core-analysis.jar")

    compile group: 'org.jetbrains.kotlin', name: 'kotlin-compiler', version: kotlin_version
    compile group: 'org.jetbrains.kotlin', name: 'kotlin-script-runtime', version: kotlin_version
    compile files("../lib/kotlin-ide-common.jar")
    compile files("../lib/markdown.jar")
    compile files("../lib/picocontainer.jar")

    runtime "org.fusesource.jansi:jansi:1.11"

    runtime files("../lib/trove4j.jar")
    runtime files("../lib/jdom.jar")
    runtime files("../lib/protobuf-2.6.1-lite.jar")
    runtime files("../lib/asm-all.jar")
    runtime files("../lib/jps-model.jar")

    //tools.jar
    def toolsJar = files(((URLClassLoader) ToolProvider.getSystemToolClassLoader()).getURLs().findAll { it.path.endsWith("jar") })
    compileOnly toolsJar
    testCompile toolsJar

    compile project(":integration")

    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.jetbrains.kotlin', name: 'kotlin-test-junit', version: kotlin_version
    testCompile "com.nhaarman:mockito-kotlin-kt1.1:1.5.0"
}

